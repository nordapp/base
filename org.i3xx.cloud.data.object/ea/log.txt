
---------- SpringClassGeneratorService ----------
Package
{
  name="SpringBoot DataRepo Model"
  namespaceroot="true"
  
Package
{
  notes=""
  scope="Public"
  version="1.0"
  author="Stefan Hauptmann"
  alias=""
  name="org"
  stereotype=""
  
Package
{
  notes=""
  scope="Public"
  version="1.0"
  author="Stefan Hauptmann"
  alias=""
  name="i3xx"
  stereotype=""
  
Package
{
  notes=""
  scope="Public"
  version="1.0"
  author="Stefan Hauptmann"
  alias=""
  name="cloud"
  stereotype=""
  
Package
{
  notes=""
  scope="Public"
  version="1.0"
  author="Stefan Hauptmann"
  alias=""
  name="data"
  stereotype=""
  
Package
{
  notes=""
  scope="Public"
  version="1.0"
  author="Stefan Hauptmann"
  alias=""
  name="object"
  stereotype=""
  
Package
{
  notes=""
  scope="Public"
  version="1.0"
  author="Stefan Hauptmann"
  alias=""
  name="domain"
  stereotype=""
  
  
  Class
  {
	XRef{namespace="SpringClassGeneratorService" name="Class" source="{289499A4-AD3B-4fc2-A1D0-53D6AD1AB3E8}"}
    notes=""
  scope="Public"
  version="1.0"
  author="Stefan Hauptmann"
  alias=""
    name="DAO_Creator_Service"
    stereotype="dao generator"
    language="Java"
	
	Tag
	{
	  name="annotations"
	  value="@Service(value=\"org-i3xx-cloud-data-object-domain-DAO_Creator_Service\")"
	}
	
	Attribute
	{
	  name="daoCreatorService"
	  type="DAO_Creator_Service"
	  scope="private"
	  default="null"
	  static="true"
	}
	
	Attribute
{
  name="obidService"
  type="ObidService"
  scope="Private"
  
  Tag
  {
	name="annotations"
	value="@Autowired"
  }
}
Attribute
{
  name="oblogService"
  type="OblogService"
  scope="Private"
  
  Tag
  {
	name="annotations"
	value="@Autowired"
  }
}
	
	Operation
	{
	  name="of"
	  stereotype="built in"
	  type="DAO_Creator_Service"
	  static="true"
	  
	  code="//singleton
if(daoCreatorService==null)
  daoCreatorService = new DAO_Creator_Service();
return daoCreatorService;"
	}
	
	
	
	Operation
	{
	  name="getObject"
	  stereotype="dao generator type"
	  type="Object"
	  
	  Parameter
	  {
		name="className"
		type="String"
	  }
	  
	  Parameter
	  {
		name="guid"
		type="long"
	  }
	  
	  code="if (className!=null && className.equalsIgnoreCase(\"Obid\")){
	return obidService.getObject(guid);
}

if (className!=null && className.equalsIgnoreCase(\"Oblog\")){
	return oblogService.getObject(guid);
}
throw new IllegalArgumentException(className+\" is not a valid argument.\");"
	}
	
	
	Operation
	{
	  name="getObject"
	  stereotype="dao generator type"
	  type="Object"
	  
	  Parameter
	  {
		name="className"
		type="String"
	  }
	  
	  Parameter
	  {
		name="uuid"
		type="String"
	  }
	  
	  code="if (className!=null && className.equalsIgnoreCase(\"Obid\")){
	return obidService.getObject(uuid);
}

if (className!=null && className.equalsIgnoreCase(\"Oblog\")){
	return oblogService.getObject(uuid);
}
throw new IllegalArgumentException(className+\" is not a valid argument.\");"
	}
	
	
	Operation
	{
	  name="getOrCreateObject"
	  stereotype="dao generator type"
	  type="Object"
	  
	  Parameter
	  {
		name="className"
		type="String"
	  }
	  
	  Parameter
	  {
		name="guid"
		type="long"
	  }
	  
	  Parameter
	  {
		name="uuid"
		type="String"
	  }
	  
	  Parameter
	  {
		name="history"
		type="String"
	  }
	  
	  code="if (className!=null && className.equalsIgnoreCase(\"Obid\")){
	return obidService.getOrCreateObject(guid, uuid, history);
}

if (className!=null && className.equalsIgnoreCase(\"Oblog\")){
	return oblogService.getOrCreateObject(guid, uuid, history);
}
throw new IllegalArgumentException(className+\" is not a valid argument.\");"
	}
	
	
	Operation
	{
	  name="getOrCreateObject"
	  stereotype="dao generator type"
	  type="Object"
	  
	  Parameter
	  {
		name="className"
		type="String"
	  }
	  
	  Parameter
	  {
		name="uuid"
		type="String"
	  }
	  
	  code="if (className!=null && className.equalsIgnoreCase(\"Obid\")){
	return obidService.getOrCreateObject(uuid);
}

if (className!=null && className.equalsIgnoreCase(\"Oblog\")){
	return oblogService.getOrCreateObject(uuid);
}
throw new IllegalArgumentException(className+\" is not a valid argument.\");"
	}
	
	
	Operation
	{
	  name="getOrCreateObject"
	  stereotype="dao generator type"
	  type="Object"
	  
	  Parameter
	  {
		name="className"
		type="String"
	  }
	  
	  Parameter
	  {
		name="uuid"
		type="String"
	  }
	  
	  Parameter
	  {
		name="history"
		type="String"
	  }
	  
	  code="if (className!=null && className.equalsIgnoreCase(\"Obid\")){
	return obidService.getOrCreateObject(uuid, history);
}

if (className!=null && className.equalsIgnoreCase(\"Oblog\")){
	return oblogService.getOrCreateObject(uuid, history);
}
throw new IllegalArgumentException(className+\" is not a valid argument.\");"
	}
	
	
	
	Operation
	{
	  name="saveObject"
	  stereotype="dao generator type"
	  type="void"
	  
	  Parameter
	  {
		name="className"
		type="String"
	  }
	  
	  Parameter
	  {
		name="obj"
		type="Object"
	  }
	  
	  code="if (className!=null && className.equalsIgnoreCase(\"Obid\")){
	 obidService.save((Obid)obj);
}

if (className!=null && className.equalsIgnoreCase(\"Oblog\")){
	 oblogService.save((Oblog)obj);
}
throw new IllegalArgumentException(className+\" is not a valid argument.\");"
	}
	
	
	
	Operation
	{
	  name="deleteObject"
	  stereotype="dao generator type"
	  type="void"
	  
	  Parameter
	  {
		name="className"
		type="String"
	  }
	  
	  Parameter
	  {
		name="guid"
		type="long"
	  }
	  
	  code="if (className!=null && className.equalsIgnoreCase(\"Obid\")){
	 obidService.delete(guid);
}

if (className!=null && className.equalsIgnoreCase(\"Oblog\")){
	 oblogService.delete(guid);
}
throw new IllegalArgumentException(className+\" is not a valid argument.\");"
	}
  }
 
}
 
}
 
}
 
}
 
}
 
}
}